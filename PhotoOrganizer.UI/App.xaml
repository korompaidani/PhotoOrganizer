<Application x:Class="PhotoOrganizer.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PhotoOrganizer.UI" 
             xmlns:view="clr-namespace:PhotoOrganizer.UI.View"
             xmlns:resources="clr-namespace:PhotoOrganizer.UI.Resources.Language"
             xmlns:viewModel="clr-namespace:PhotoOrganizer.UI.ViewModel"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             Startup="Application_Startup">
    <Application.Resources>

        <ResourceDictionary>
            <BitmapImage  x:Key="saveImage" UriSource="pack://application:,,,/Resources/Icons/button_save_light.png"/>
            <BitmapImage  x:Key="wrtiteMetaImage" UriSource="pack://application:,,,/Resources/Icons/button_writemeta_light.png"/>
            <BitmapImage  x:Key="markAsUnchangedImage" UriSource="pack://application:,,,/Resources/Icons/button_unchanged_light.png"/>
            <BitmapImage  x:Key="finalizeImage" UriSource="pack://application:,,,/Resources/Icons/button_finalize_light.png"/>
            <BitmapImage  x:Key="bulkSetImage" UriSource="pack://application:,,,/Resources/Icons/button_set_light.png"/>
            <BitmapImage  x:Key="addToShelveImage" UriSource="pack://application:,,,/Resources/Icons/button_shelve_light.png"/>
            <BitmapImage  x:Key="removeFromShelveImage" UriSource="pack://application:,,,/Resources/Icons/button_unshelve_light.png"/>
            <BitmapImage  x:Key="mapButtonImage" UriSource="pack://application:,,,/Resources/Icons/button_map_light.png"/>
            <BitmapImage  x:Key="copyButtonImage" UriSource="pack://application:,,,/Resources/Icons/button_copy_light.png"/>
            <BitmapImage  x:Key="upButtonImage" UriSource="pack://application:,,,/Resources/Icons/button_up_light.png"/>
            <BitmapImage  x:Key="downButtonImage" UriSource="pack://application:,,,/Resources/Icons/button_down_light.png"/>

            <Image x:Key="mapImage">
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Icons/button_map_light.png" />
                </Image.Source>
            </Image>
            <Image x:Key="copyImage" Width="15" Height="15">
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Icons/button_copy_light.png" />
                </Image.Source>
            </Image>
            <Image x:Key="setImage" x:Shared="false" Width="20" Height="20">
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Icons/button_set_light.png" />
                </Image.Source>
            </Image>
            <Image x:Key="upImage" Width="15" Height="15">
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Icons/button_up_light.png" />
                </Image.Source>
            </Image>
            <Image x:Key="downImage"  Width="15" Height="15">
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Icons/button_down_light.png" />
                </Image.Source>
            </Image>
            <Image x:Key="selectAll">
                <Image.Source>
                    <BitmapImage UriSource="pack://application:,,,/Resources/Icons/button_selectDeselectAll.png" />
                </Image.Source>
            </Image>

            <Style TargetType="StackPanel" x:Key="DelayShowToolTip">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsVisible, RelativeSource={RelativeSource AncestorType=StackPanel}}" Value="true">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard x:Name="VisibleStory">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                   Duration="0"
                                   BeginTime="0:0:2">
                                        <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="VisibleStory"/>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.FlatButton.xaml" />
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml" />
                <!-- **********************************************<<<BUTTONS>>>************************************************* -->
                <!-- =================================================default button==================================================== -->
                <ResourceDictionary>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Style>
                    <!-- =================================================metro selection tile buttons==================================================== -->
                    <Style x:Key="MyMetroSelectionTilesButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
                           TargetType="Button">
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
                        <Style.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro link buttons==================================================== -->
                    <Style x:Key="MyLinkButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
                           TargetType="Button">
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro square button==================================================== -->
                    <Style x:Key="MyMetroSquareButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Setter Property="FontSize" Value="12" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro get started button==================================================== -->
                    <Style x:Key="MyMetroGetStartedButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        <Setter Property="Height" Value="150" />
                        <Setter Property="Width" Value="150" />
                        <Setter Property="FontSize" Value="18" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro people add button==================================================== -->
                    <Style x:Key="MyMetroAddPeopleButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="Content" Value="+" />
                        <Setter Property="FontWeight" Value="Black" />
                        <Setter Property="Padding" Value="0 0 0 0" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                <Setter Property="Content" Value="Add" />
                                <Setter Property="FontSize" Value="10" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="ToolTipService.InitialShowDelay" Value="2000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================name button==================================================== -->
                    <Style x:Key="NameButton" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                <Setter Property="Content" Value="-" />
                                <Setter Property="ToolTipService.InitialShowDelay" Value="2000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro map button==================================================== -->
                    <Style x:Key="MyMetroMapButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Setter Property="Content" Value="{DynamicResource mapImage}"/>
                        <Setter Property="ToolTipService.InitialShowDelay" Value="2000"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Padding" Value="0 0 0 3" />
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Content" Value="{x:Static resources:TextResources.Map_button}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro WEB button==================================================== -->
                    <Style x:Key="MyMetroWebButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
                           TargetType="Button">
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Padding" Value="0 0 0 5" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro set button==================================================== -->
                    <Style x:Key="MyMetroSetButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Setter Property="Content" Value="{DynamicResource setImage}" />
                        <Setter Property="ToolTipService.InitialShowDelay" Value="2000"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Padding" Value="0 0 0 3" />
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Content" Value="{x:Static resources:TextResources.Set_button}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro copy button==================================================== -->
                    <Style x:Key="MyMetroCopyButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Content" Value="{DynamicResource copyImage}" />
                        <Setter Property="ToolTipService.InitialShowDelay" Value="2000"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Padding" Value="0 0 0 3" />
                                <Setter Property="BorderBrush" Value="DarkOrange" />
                                <Setter Property="Content" Value="{x:Static resources:TextResources.Copy_button}"/>
                                <Setter Property="Foreground" Value="DarkOrange"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro Up button==================================================== -->
                    <Style x:Key="MyMetroUpButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="4" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Width" Value="30" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Content" Value="{DynamicResource upImage}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Content" Value="{x:Static resources:TextResources.Up}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- =================================================metro Down button==================================================== -->
                    <Style x:Key="MyMetroDownButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="4" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Height" Value="30" />
                        <Setter Property="Width" Value="30" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Content" Value="{DynamicResource downImage}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Content" Value="{x:Static resources:TextResources.Down}"/>
                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!-- ************************************************************************************************************ -->
                    <!-- **********************************************<<<COMBO BOX>>>************************************************* -->

                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="FontSize" Value="10"/>
                    </Style>
                    <Style TargetType="toolkit:DateTimePicker">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Height" Value="25"/>
                    </Style>

                    <!-- ************************************************************************************************************ -->
                    <!-- **********************************************<<<LABEL>>>************************************************* -->

                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Foreground" Value="#CCCCCC"/>
                    </Style>
                    <!-- ************************************************************************************************************ -->
                    <!-- **********************************************<<<LIST VIEW>>>************************************************* -->
                    <Style TargetType="ListView" BasedOn="{StaticResource {x:Type ListView}}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="BorderBrush" Value="#CCCCCC"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Style>
                    <!-- ************************************************************************************************************ -->
                    <!-- **********************************************<<<GROUPBOX>>>************************************************* -->
                    <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                        <Setter Property="BorderBrush" Value="#353535"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Height="12" Text="{Binding}" VerticalAlignment="Top" FontSize="11"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- ************************************************************************************************************ -->
                </ResourceDictionary>
                <ResourceDictionary>
                    <!-- **********************************************<<<CONVERTERS>>>************************************************* -->
                    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
                    <!-- ************************************************************************************************************ -->
                    <!-- **********************************************<<<TEXTBOX>>>************************************************* -->
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="placeholder"/>
                                        <TextBlock FontSize="10" Foreground="White" Text="{Binding ElementName=placeholder,
                                    Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="10"/>

                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!-- ************************************************************************************************************ -->
                    <!-- **********************************************<<<DATAGRID COLUMN>>>************************************************* -->

                    <Style x:Key="DataGridColumnStyle" TargetType="TextBlock">
                        <Setter Property="Margin" Value="10 0 0 0"/>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridEditingColumnStyle" TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="Red"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <DataTemplate DataType="{x:Type viewModel:PhotoDetailViewModel}">
                        <view:PhotoDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:AlbumDetailViewModel}">
                        <view:AlbumDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:LocationDetailViewModel}">
                        <view:LocationDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:PhotoViewModel}">
                        <view:PhotoView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:WorkbenchViewModel}">
                        <view:WorkbenchView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:MapViewModel}">
                        <view:MapView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                        <view:SettingsView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:WritingToFileViewModel}">
                        <view:WritingToFileView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:HelpViewModel}">
                        <view:HelpView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:AboutViewModel}">
                        <view:AboutView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:StartScreenViewModel}">
                        <view:StartView/>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>