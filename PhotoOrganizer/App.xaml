<Application x:Class="PhotoOrganizer.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PhotoOrganizer.UI" 
             xmlns:view="clr-namespace:PhotoOrganizer.UI.View"
             xmlns:viewModel="clr-namespace:PhotoOrganizer.UI.ViewModel"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             Startup="Application_Startup">
    <Application.Resources>
        
        <ResourceDictionary>
            <!--<Image x:Key="mapImage" Source="map_white_icon.png"/>-->
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.FlatButton.xaml" />
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml" />
                <ResourceDictionary>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Style>
                    <Style x:Key="NameButton" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Content" Value="{Binding}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                <Setter Property="Content" Value="-" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="MyMetroSquareButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Square.Accent}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Setter Property="FontSize" Value="12" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="MyMetroMapButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                                <Setter Property="Content" Value="map" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="MyMetroSetButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="Content" Value="Set" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="MyMetroCopyButton"
                           BasedOn="{StaticResource MahApps.Styles.Button.Circle}"
                           TargetType="Button">
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="Content" Value="copy" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Black}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="FontSize" Value="10"/>
                    </Style>
                    <Style TargetType="toolkit:DateTimePicker">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Height" Value="25"/>
                    </Style>
                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="Foreground" Value="#CCCCCC"/>
                    </Style>
                    <Style TargetType="ListView" BasedOn="{StaticResource {x:Type ListView}}">
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="BorderBrush" Value="#CCCCCC"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                        <Setter Property="BorderBrush" Value="#353535"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Height="12" Text="{Binding}" VerticalAlignment="Top" FontSize="11"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="placeholder"/>
                                        <TextBlock FontSize="10" Foreground="White" Text="{Binding ElementName=placeholder,
                                    Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="10"/>

                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridColumnStyle" TargetType="TextBlock">

                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="DarkRed"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridEditingColumnStyle" TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Background" Value="Red"/>
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <DataTemplate DataType="{x:Type viewModel:PhotoDetailViewModel}">
                        <view:PhotoDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:AlbumDetailViewModel}">
                        <view:AlbumDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:LocationDetailViewModel}">
                        <view:LocationDetailView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:PhotoViewModel}">
                        <view:PhotoView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:WorkbenchViewModel}">
                        <view:WorkbenchView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:MapViewModel}">
                        <view:MapView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                        <view:SettingsView/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModel:WritingToFileViewModel}">
                        <view:WritingToFileView/>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>